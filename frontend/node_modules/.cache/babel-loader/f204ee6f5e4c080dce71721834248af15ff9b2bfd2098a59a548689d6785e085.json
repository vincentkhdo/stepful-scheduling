{"ast":null,"code":"var _jsxFileName = \"/Users/vincentdo/Desktop/Stepful/frontend/src/components/AddSlotForm.tsx\",\n  _s = $RefreshSig$();\n// src/components/AddSlotForm.tsx\nimport React, { useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSlotForm = ({\n  onSubmit,\n  existingSlots\n}) => {\n  _s();\n  const [startTime, setStartTime] = useState('');\n  const [conflictError, setConflictError] = useState('');\n  const hasConflict = newSlot => {\n    return existingSlots.some(slot => {\n      const existingStart = new Date(slot.startTime).getTime();\n      const existingEnd = new Date(slot.endTime).getTime();\n      const newStart = new Date(newSlot.startTime).getTime();\n      const newEnd = new Date(newSlot.endTime).getTime();\n      return newStart < existingEnd && newStart >= existingStart || newEnd > existingStart && newEnd <= existingEnd || newStart <= existingStart && newEnd >= existingEnd;\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const startDate = new Date(startTime);\n    const endDate = new Date(startDate.getTime() + 2 * 60 * 60 * 1000);\n    const endTime = endDate.toISOString();\n    const newSlot = {\n      id: Date.now(),\n      startTime: startDate.toISOString(),\n      endTime\n    };\n    if (hasConflict(newSlot)) {\n      setConflictError('Slot cannot be scheduled due to a conflict with an existing slot.');\n      return;\n    }\n    try {\n      const response = await axiosInstance.post('/slots', {\n        startTime: newSlot.startTime\n      });\n      onSubmit(response.data);\n      setStartTime('');\n      setConflictError('');\n    } catch (error) {\n      console.error('Error adding slot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), conflictError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: conflictError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSlotForm, \"At+IaREEEj2h3Ta73AENNi3re9I=\");\n_c = AddSlotForm;\nexport default AddSlotForm;\nvar _c;\n$RefreshReg$(_c, \"AddSlotForm\");","map":{"version":3,"names":["React","useState","axiosInstance","jsxDEV","_jsxDEV","AddSlotForm","onSubmit","existingSlots","_s","startTime","setStartTime","conflictError","setConflictError","hasConflict","newSlot","some","slot","existingStart","Date","getTime","existingEnd","endTime","newStart","newEnd","handleSubmit","event","preventDefault","startDate","endDate","toISOString","id","now","response","post","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","color","_c","$RefreshReg$"],"sources":["/Users/vincentdo/Desktop/Stepful/frontend/src/components/AddSlotForm.tsx"],"sourcesContent":["// src/components/AddSlotForm.tsx\nimport React, { useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\n\ninterface Slot {\n  id: number;\n  startTime: string;\n  endTime: string;\n}\n\ninterface AddSlotFormProps {\n  onSubmit: (slot: Slot) => void;\n  existingSlots: Slot[];\n}\n\nconst AddSlotForm: React.FC<AddSlotFormProps> = ({ onSubmit, existingSlots }) => {\n  const [startTime, setStartTime] = useState('');\n  const [conflictError, setConflictError] = useState('');\n\n  const hasConflict = (newSlot: Slot) => {\n    return existingSlots.some((slot) => {\n      const existingStart = new Date(slot.startTime).getTime();\n      const existingEnd = new Date(slot.endTime).getTime();\n      const newStart = new Date(newSlot.startTime).getTime();\n      const newEnd = new Date(newSlot.endTime).getTime();\n\n      return (\n        (newStart < existingEnd && newStart >= existingStart) || \n        (newEnd > existingStart && newEnd <= existingEnd) ||    \n        (newStart <= existingStart && newEnd >= existingEnd)    \n      );\n    });\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const startDate = new Date(startTime);\n    const endDate = new Date(startDate.getTime() + 2 * 60 * 60 * 1000);\n    const endTime = endDate.toISOString();\n\n    const newSlot: Slot = {\n      id: Date.now(),\n      startTime: startDate.toISOString(),\n      endTime,\n    };\n\n    if (hasConflict(newSlot)) {\n      setConflictError('Slot cannot be scheduled due to a conflict with an existing slot.');\n      return;\n    }\n\n    try {\n      const response = await axiosInstance.post('/slots', {\n        startTime: newSlot.startTime,\n      });\n      onSubmit(response.data);\n      setStartTime('');\n      setConflictError('');\n    } catch (error) {\n      console.error('Error adding slot:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Slot</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Start Time:\n          <input\n            type=\"datetime-local\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n          />\n        </label>\n        <br />\n        {conflictError && <p style={{ color: 'red' }}>{conflictError}</p>}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddSlotForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}