{"ast":null,"code":"var _jsxFileName = \"/Users/vincentdo/Desktop/Stepful/frontend/src/components/SlotCalendar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotCalendar = ({\n  slots,\n  onEdit\n}) => {\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('en-US', {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  };\n  const sortedSlots = slots.sort((a, b) => new Date(a.startTime).getTime() - new Date(b.startTime).getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `${slot.bookedBy ? 'booked' : ''} ${slot.feedbackSubmitted ? 'feedback-submitted' : ''}`,\n        children: [formatDate(slot.startTime), \" - \", formatDate(slot.endTime), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onEdit(slot),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, slot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = SlotCalendar;\nexport default SlotCalendar;\nvar _c;\n$RefreshReg$(_c, \"SlotCalendar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SlotCalendar","slots","onEdit","formatDate","dateString","date","Date","toLocaleString","weekday","year","month","day","hour","minute","sortedSlots","sort","a","b","startTime","getTime","children","fileName","_jsxFileName","lineNumber","columnNumber","map","slot","className","bookedBy","feedbackSubmitted","endTime","onClick","id","_c","$RefreshReg$"],"sources":["/Users/vincentdo/Desktop/Stepful/frontend/src/components/SlotCalendar.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Slot {\n  id: number;\n  startTime: string;\n  endTime: string;\n  bookedBy?: string;\n  studentPhone?: string;\n  coachPhone?: string;\n  satisfaction?: number;\n  notes?: string;\n  feedbackSubmitted?: boolean;\n}\n\ninterface SlotCalendarProps {\n  slots: Slot[];\n  onEdit: (slot: Slot) => void;\n}\n\nconst SlotCalendar: React.FC<SlotCalendarProps> = ({ slots, onEdit }) => {\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('en-US', {\n      weekday: 'short',\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  };\n\n  const sortedSlots = slots.sort((a, b) => new Date(a.startTime).getTime() - new Date(b.startTime).getTime());\n\n  return (\n    <div>\n      <h2>Upcoming Slots</h2>\n      <ul>\n        {sortedSlots.map(slot => (\n          <li key={slot.id} className={`${slot.bookedBy ? 'booked' : ''} ${slot.feedbackSubmitted ? 'feedback-submitted' : ''}`}>\n            {formatDate(slot.startTime)} - {formatDate(slot.endTime)}\n            <button onClick={() => onEdit(slot)}>View Details</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SlotCalendar;\n  "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmB1B,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EACvE,MAAMC,UAAU,GAAIC,UAAkB,IAAK;IACzC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;MAClCC,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGb,KAAK,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIX,IAAI,CAACU,CAAC,CAACE,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIb,IAAI,CAACW,CAAC,CAACC,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EAE3G,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAAqB,QAAA,EACGN,WAAW,CAACW,GAAG,CAACC,IAAI,iBACnB3B,OAAA;QAAkB4B,SAAS,EAAE,GAAGD,IAAI,CAACE,QAAQ,GAAG,QAAQ,GAAG,EAAE,IAAIF,IAAI,CAACG,iBAAiB,GAAG,oBAAoB,GAAG,EAAE,EAAG;QAAAT,QAAA,GACnHjB,UAAU,CAACuB,IAAI,CAACR,SAAS,CAAC,EAAC,KAAG,EAACf,UAAU,CAACuB,IAAI,CAACI,OAAO,CAAC,eACxD/B,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAM7B,MAAM,CAACwB,IAAI,CAAE;UAAAN,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFnDE,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACS,EAAA,GA5BIjC,YAAyC;AA8B/C,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}