{"ast":null,"code":"var _jsxFileName = \"/Users/vincentdo/Desktop/Stepful/frontend/src/components/RecordFeedback.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecordFeedback = ({\n  slot,\n  onSubmit\n}) => {\n  _s();\n  const [satisfaction, setSatisfaction] = useState(slot.satisfaction || 3);\n  const [notes, setNotes] = useState(slot.notes || '');\n  const [coachPhone, setCoachPhone] = useState(slot.coachPhone || '123-456-7890');\n  const [phoneError, setPhoneError] = useState('');\n  const [notesError, setNotesError] = useState('');\n  const [shareWithStudent, setShareWithStudent] = useState(slot.shareWithStudent || false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (notes.trim() === '') {\n      setNotesError('Notes cannot be blank.');\n      return;\n    }\n    const updatedSlot = {\n      ...slot,\n      satisfaction,\n      notes,\n      feedbackSubmitted: true,\n      shareWithStudent\n    };\n    try {\n      const response = await axios.post(`http://localhost:5001/api/slots/${slot.id}/feedback`, {\n        satisfaction,\n        notes,\n        shareWithStudent\n      });\n      onSubmit(response.data);\n      setNotesError(''); // Clear the error message\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n  const handleCoachPhoneUpdate = async () => {\n    const phoneRegex = /^\\d{3}-\\d{3}-\\d{4}$/;\n    if (!phoneRegex.test(coachPhone)) {\n      setPhoneError('Phone number must be in the format XXX-XXX-XXXX.');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5001/api/slots/${slot.id}/update-coach-phone`, {\n        coachPhone\n      });\n      onSubmit(response.data);\n      setPhoneError(''); // Clear the error message\n    } catch (error) {\n      console.error('Error updating coach phone:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Record Feedback for Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), slot.bookedBy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Booked by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this), \" \", slot.bookedBy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Student's phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 14\n        }, this), \" \", slot.studentPhone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Coach's Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          value: coachPhone,\n          onChange: e => setCoachPhone(e.target.value),\n          onBlur: handleCoachPhoneUpdate // Update phone on blur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), phoneError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: phoneError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Satisfaction (1-5):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: satisfaction,\n            onChange: e => setSatisfaction(Number(e.target.value)),\n            min: \"1\",\n            max: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Notes:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: notes,\n            onChange: e => setNotes(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), notesError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: notesError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: shareWithStudent,\n            onChange: e => setShareWithStudent(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Share with student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The slot must be booked by a student before you can submit feedback.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordFeedback, \"5wW+AJ3xBmCiSOaUEDHIi/sioBk=\");\n_c = RecordFeedback;\nexport default RecordFeedback;\nvar _c;\n$RefreshReg$(_c, \"RecordFeedback\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RecordFeedback","slot","onSubmit","_s","satisfaction","setSatisfaction","notes","setNotes","coachPhone","setCoachPhone","phoneError","setPhoneError","notesError","setNotesError","shareWithStudent","setShareWithStudent","handleSubmit","event","preventDefault","trim","updatedSlot","feedbackSubmitted","response","post","id","data","error","console","handleCoachPhoneUpdate","phoneRegex","test","children","fileName","_jsxFileName","lineNumber","columnNumber","bookedBy","studentPhone","type","value","onChange","e","target","onBlur","style","color","Number","min","max","className","checked","_c","$RefreshReg$"],"sources":["/Users/vincentdo/Desktop/Stepful/frontend/src/components/RecordFeedback.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface Slot {\n  id: number;\n  startTime: string;\n  endTime: string;\n  bookedBy?: string;\n  studentPhone?: string;\n  coachPhone?: string;\n  satisfaction?: number;\n  notes?: string;\n  feedbackSubmitted?: boolean;\n  shareWithStudent?: boolean;\n}\n\ninterface RecordFeedbackProps {\n  slot: Slot;\n  onSubmit: (updatedSlot: Slot) => void;\n}\n\nconst RecordFeedback: React.FC<RecordFeedbackProps> = ({ slot, onSubmit }) => {\n  const [satisfaction, setSatisfaction] = useState(slot.satisfaction || 3);\n  const [notes, setNotes] = useState(slot.notes || '');\n  const [coachPhone, setCoachPhone] = useState(slot.coachPhone || '123-456-7890');\n  const [phoneError, setPhoneError] = useState('');\n  const [notesError, setNotesError] = useState('');\n  const [shareWithStudent, setShareWithStudent] = useState(slot.shareWithStudent || false);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (notes.trim() === '') {\n      setNotesError('Notes cannot be blank.');\n      return;\n    }\n    const updatedSlot = { ...slot, satisfaction, notes, feedbackSubmitted: true, shareWithStudent };\n\n    try {\n      const response = await axios.post(`http://localhost:5001/api/slots/${slot.id}/feedback`, {\n        satisfaction,\n        notes,\n        shareWithStudent\n      });\n      onSubmit(response.data);\n      setNotesError(''); // Clear the error message\n    } catch (error) {\n      console.error('Error submitting feedback:', error);\n    }\n  };\n\n  const handleCoachPhoneUpdate = async () => {\n    const phoneRegex = /^\\d{3}-\\d{3}-\\d{4}$/;\n    if (!phoneRegex.test(coachPhone)) {\n      setPhoneError('Phone number must be in the format XXX-XXX-XXXX.');\n      return;\n    }\n\n    try {\n      const response = await axios.post(`http://localhost:5001/api/slots/${slot.id}/update-coach-phone`, {\n        coachPhone,\n      });\n      onSubmit(response.data);\n      setPhoneError(''); // Clear the error message\n    } catch (error) {\n      console.error('Error updating coach phone:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Record Feedback for Slot</h2>\n      {slot.bookedBy ? (\n        <>\n          <p><strong>Booked by:</strong> {slot.bookedBy}</p>\n          <p><strong>Student's phone:</strong> {slot.studentPhone}</p>\n          <label>\n            Coach's Phone:\n            <input\n              type=\"tel\"\n              value={coachPhone}\n              onChange={(e) => setCoachPhone(e.target.value)}\n              onBlur={handleCoachPhoneUpdate}  // Update phone on blur\n            />\n          </label>\n          {phoneError && <p style={{ color: 'red' }}>{phoneError}</p>}\n          <form onSubmit={handleSubmit}>\n            <label>\n              Satisfaction (1-5):\n              <input\n                type=\"number\"\n                value={satisfaction}\n                onChange={(e) => setSatisfaction(Number(e.target.value))}\n                min=\"1\"\n                max=\"5\"\n              />\n            </label>\n            <label>\n              Notes:\n              <textarea\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n              />\n            </label>\n            {notesError && <p style={{ color: 'red' }}>{notesError}</p>}\n            <div className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                checked={shareWithStudent}\n                onChange={(e) => setShareWithStudent(e.target.checked)}\n              />\n              <label>Share with student</label>\n            </div>\n            <button type=\"submit\">Submit Feedback</button>\n          </form>\n        </>\n      ) : (\n        <p>The slot must be booked by a student before you can submit feedback.</p>\n      )}\n    </div>\n  );\n};\n\nexport default RecordFeedback;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}